spring:
#  datasource:
#    username: root
#    password: 1942951600
#    url: jdbc:mysql://localhost:3306/yan?characterEncoding=utf-8&useSSL=false&useUnicode=true&serverTimezone=UTC
#    driver-class-name: com.mysql.cj.jdbc.Driver

  application:
    name: yan-first
  cloud:
    nacos:
      discovery:
        server-addr: 192.168.56.20:8848
    sentinel:
      transport:
        dashboard: localhost:8333
  shardingsphere:
    props:
      sql-show: true
    mode:
      type: Memory
    datasource:    # 配置数据源
      names: yan,slave1,slave2    # 分库的逻辑库名,可配置多个
      yan:    # 逻辑库名
        type: com.zaxxer.hikari.HikariDataSource
        driver-class-name: com.mysql.cj.jdbc.Driver
        url: jdbc:mysql://localhost:3306/yan?characterEncoding=utf-8&useSSL=false&useUnicode=true&serverTimezone=UTC
        username: root
        password: 1942951600
      slave1:    # 逻辑库名
        type: com.zaxxer.hikari.HikariDataSource
        driver-class-name: com.mysql.cj.jdbc.Driver
        url: jdbc:mysql://localhost:3306/yan_slave?characterEncoding=utf-8&useSSL=false&useUnicode=true&serverTimezone=UTC
        username: root
        password: 1942951600
      slave2:    # 逻辑库名
        type: com.zaxxer.hikari.HikariDataSource
        driver-class-name: com.mysql.cj.jdbc.Driver
        url: jdbc:mysql://localhost:3306/yan_slave?characterEncoding=utf-8&useSSL=false&useUnicode=true&serverTimezone=UTC
        username: root
        password: 1942951600
    master-slave-rules:
      myds:
        master-data-source-name: yan
        slave-data-source-names: slave1,slave2
    rules:
      readwrite-splitting:
#      replica-query:
        data-sources:
          # myds 定义的是上层的数据源
          myds:
            type: Static
            props:
              write-data-source-name: yan
#              read-data-source-names: slave1,slave2
              read-data-source-names: yan
#            primary-data-source-name: yan
#            replica-data-source-names: slave1,slave2
            load-balancer-name: alg_round
        load-balancers:
          alg_round:
            type: ROUND_ROBIN

  rocketmq:
    name-server: 192.168.56.20:9876
    producer-send-msg-timeout: 3000
    producer:
      shutdown:
        enable: false
    producer-group-name: consumeNetty

  redis:
    host: 192.168.56.20
    port: 6379

  rabbitmq:
    host: 192.168.56.20
    port: 5672
    virtual-host: /
    username: guest
    password: guest
    publisher-confirms: true
    publisher-returns: true
    template:
      mandatory: true
    listener:
      simple:
        acknowledge-mode: manual


mybatis-plus:
  mapper-locations: classpath*:com/rose/yaj/mapper/xml/*Mapper.xml
  configuration:
    call-setters-on-nulls: true
  global-config:
    db-config:
      # auto设置主键自增
      id-type: auto
      # 配置逻辑删除 1代表删除 0代表未删除
      logic-delete-value: 1
      logic-not-delete-value: 0

server:
  #  port: 443
  port: 8999
  tomcat:
    uri-encoding: utf-8
  servlet:
    context-path: /


#rocketmq:
#  name-server: 192.168.56.20:9876
#  producer:
#    group: Netty-group
#    sendMessageTimeout: 300000



myRabbitmq:
  queue: yan-queue
  exchange: yan-exchange
  routeKey: yan
  MQConfig:
    queues: yan.netty.queue
    routingKey: netty
    exchange: yan-exchange


aliyun:
  oss:
    file:
      endpoint: xxxx.aliyuncs.com
      keyid: xxxx
      keysecret: xxxx
      bucketname: xxx
